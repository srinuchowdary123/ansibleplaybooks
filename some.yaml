---
- name: Install Apache Tomcat
  hosts: all
  become: yes
  tasks:
    - name: Update package cache
      ansible.builtin.package:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install Java
      ansible.builtin.package:
        name: "{{ java_package }}"
        state: present

    - name: Create tomcat group
      ansible.builtin.group:
        name: "{{ group_name }}"
        state: present

    - name: Add tomcat user
      ansible.builtin.user:
        name: "{{ name_user }}"
        home: "{{ user_home }}"
        shell:  "{{ user_shell }}"
        system: yes

    - name: Check if Tomcat archive is extracted
      ansible.builtin.stat:
        path: /opt/tomcat/conf/catalina.properties
      register: tomcat_archive

    - name: Extract Apache Tomcat
      ansible.builtin.unarchive:
        src: "https://archive.apache.org/dist/tomcat/tomcat-10/v{{tomcat_version}}/bin/apache-tomcat-{{tomcat_version}}.tar.gz"
        dest: "/opt/tomcat"
        remote_src: yes
        extra_opts: [--strip-components=1]
      when: not ansible_distribution == "Centos"

    - name: Set ownership and permissions for Tomcat directory
      ansible.builtin.file:
        path: "{{ user_home }}"
        owner: "{{ name_user }}"
        group: "{{ group_name }}"
        recurse: yes
        mode: "0750"
      when: not tomcat_archive.stat.exists


    - name: Copy  ubuntu tomcat.service file
      ansible.builtin.copy:
        src: /home/ansible/ubuntu.service
        dest: "/etc/systemd/system/tomcat.service"
      when: ansible_distribution == "Ubuntu"
      notify:
        - Reload Tomcat

    - name: Copy rhel  tomcat.service file
      ansible.builtin.copy:
        src: /home/ansible/rhel.service
        dest: "/etc/systemd/system/tomcat.service"
      when: ansible_distribution == "RedHat"
      
      notify:
        - Reload Tomcat    

    - name: Copy tomcat-users.xml file
      ansible.builtin.copy:
        src: /home/ansible/users
        dest: "/opt/tomcat/conf/tomcat-users.xml"
      when: ansible_distribution == "Ubuntu"
      notify:
        - Reload Tomcat

    - name: Copy host-manager context.xml file
      ansible.builtin.copy:
        src: /home/ansible/context
        dest: "{{ item }}"
      loop:
        - "/opt/tomcat/webapps/host-manager/META-INF/context.xml"
        - "/opt/tomcat/webapps/manager/META-INF/context.xml"
      when: ansible_distribution == "Ubuntu"
      notify:
        - Reload Tomcat

    - name: Enable and start Tomcat service
      ansible.builtin.service:
        name: tomcat
        enabled: yes
        state: started

  handlers:
    - name: Reload Tomcat
      ansible.builtin.systemd:
        name: tomcat
        state: restarted
